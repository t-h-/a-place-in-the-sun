// Code generated by MockGen. DO NOT EDIT.
// Source: backend/weatherapi (interfaces: WeatherService)

// Package mocks is a generated GoMock package.
package mocks

import (
	shared "backend/shared"
	reflect "reflect"
	sync "sync"

	gomock "github.com/golang/mock/gomock"
)

// MockWeatherService is a mock of WeatherService interface.
type MockWeatherService struct {
	ctrl     *gomock.Controller
	recorder *MockWeatherServiceMockRecorder
}

// MockWeatherServiceMockRecorder is the mock recorder for MockWeatherService.
type MockWeatherServiceMockRecorder struct {
	mock *MockWeatherService
}

// NewMockWeatherService creates a new mock instance.
func NewMockWeatherService(ctrl *gomock.Controller) *MockWeatherService {
	mock := &MockWeatherService{ctrl: ctrl}
	mock.recorder = &MockWeatherServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWeatherService) EXPECT() *MockWeatherServiceMockRecorder {
	return m.recorder
}

// QueryPoint mocks base method.
func (m *MockWeatherService) QueryPoint(arg0 *shared.Point, arg1 *sync.WaitGroup, arg2 chan struct{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "QueryPoint", arg0, arg1, arg2)
}

// QueryPoint indicates an expected call of QueryPoint.
func (mr *MockWeatherServiceMockRecorder) QueryPoint(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryPoint", reflect.TypeOf((*MockWeatherService)(nil).QueryPoint), arg0, arg1, arg2)
}
