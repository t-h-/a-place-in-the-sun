// Code generated by MockGen. DO NOT EDIT.
// Source: backend/sunnyness (interfaces: Cache)

// Package mocks is a generated GoMock package.
package mocks

import (
	shared "backend/shared"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCache is a mock of Cache interface.
type MockCache struct {
	ctrl     *gomock.Controller
	recorder *MockCacheMockRecorder
}

// MockCacheMockRecorder is the mock recorder for MockCache.
type MockCacheMockRecorder struct {
	mock *MockCache
}

// NewMockCache creates a new mock instance.
func NewMockCache(ctrl *gomock.Controller) *MockCache {
	mock := &MockCache{ctrl: ctrl}
	mock.recorder = &MockCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCache) EXPECT() *MockCacheMockRecorder {
	return m.recorder
}

// CreateCompositeKey mocks base method.
func (m *MockCache) CreateCompositeKey(arg0 *shared.Point) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCompositeKey", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// CreateCompositeKey indicates an expected call of CreateCompositeKey.
func (mr *MockCacheMockRecorder) CreateCompositeKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCompositeKey", reflect.TypeOf((*MockCache)(nil).CreateCompositeKey), arg0)
}

// GetSunnyness mocks base method.
func (m *MockCache) GetSunnyness(arg0 *shared.Point) (float32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSunnyness", arg0)
	ret0, _ := ret[0].(float32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSunnyness indicates an expected call of GetSunnyness.
func (mr *MockCacheMockRecorder) GetSunnyness(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSunnyness", reflect.TypeOf((*MockCache)(nil).GetSunnyness), arg0)
}

// SetSunnyness mocks base method.
func (m *MockCache) SetSunnyness(arg0 *shared.Point) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetSunnyness", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetSunnyness indicates an expected call of SetSunnyness.
func (mr *MockCacheMockRecorder) SetSunnyness(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSunnyness", reflect.TypeOf((*MockCache)(nil).SetSunnyness), arg0)
}

// SetSunnynesses mocks base method.
func (m *MockCache) SetSunnynesses(arg0 []*shared.Point) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetSunnynesses", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetSunnynesses indicates an expected call of SetSunnynesses.
func (mr *MockCacheMockRecorder) SetSunnynesses(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSunnynesses", reflect.TypeOf((*MockCache)(nil).SetSunnynesses), arg0)
}
