// Code generated by MockGen. DO NOT EDIT.
// Source: backend/interpolation (interfaces: InterpolationService)

// Package mocks is a generated GoMock package.
package mocks

import (
	shared "backend/shared"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInterpolationService is a mock of InterpolationService interface.
type MockInterpolationService struct {
	ctrl     *gomock.Controller
	recorder *MockInterpolationServiceMockRecorder
}

// MockInterpolationServiceMockRecorder is the mock recorder for MockInterpolationService.
type MockInterpolationServiceMockRecorder struct {
	mock *MockInterpolationService
}

// NewMockInterpolationService creates a new mock instance.
func NewMockInterpolationService(ctrl *gomock.Controller) *MockInterpolationService {
	mock := &MockInterpolationService{ctrl: ctrl}
	mock.recorder = &MockInterpolationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterpolationService) EXPECT() *MockInterpolationServiceMockRecorder {
	return m.recorder
}

// InterpolateGrid mocks base method.
func (m *MockInterpolationService) InterpolateGrid(arg0 []*shared.Point, arg1 shared.Box, arg2 shared.NumPoints) []*shared.Point {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InterpolateGrid", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*shared.Point)
	return ret0
}

// InterpolateGrid indicates an expected call of InterpolateGrid.
func (mr *MockInterpolationServiceMockRecorder) InterpolateGrid(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InterpolateGrid", reflect.TypeOf((*MockInterpolationService)(nil).InterpolateGrid), arg0, arg1, arg2)
}
